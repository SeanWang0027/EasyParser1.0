FIRST($)=['$']
FIRST(int)=['int']
FIRST(float)=['float']
FIRST(double)=['double']
FIRST(char)=['char']
FIRST(;)=[';']
FIRST(identifier)=['identifier']
FIRST(=)=['=']
FIRST(,)=[',']
FIRST(number)=['number']
FIRST(()=['(']
FIRST())=[')']
FIRST(+)=['+']
FIRST(-)=['-']
FIRST(*)=['*']
FIRST(/)=['/']
FIRST(%)=['%']
FIRST(<)=['<']
FIRST(>)=['>']
FIRST(^)=['^']
FIRST(&)=['&']
FIRST(<=)=['<=']
FIRST(>=)=['>=']
FIRST(function)=['function']
FIRST({)=['{']
FIRST(})=['}']
FIRST(print)=['print']
FIRST(scanf)=['scanf']
FIRST(continue)=['continue']
FIRST(break)=['break']
FIRST(return)=['return']
FIRST(if)=['if']
FIRST(else)=['else']
FIRST(while)=['while']
FIRST(for)=['for']
FIRST(sstart)=['int', 'float', 'double', 'char', 'function', '$']
FIRST(start)=['int', 'float', 'double', 'char', 'function', '$', '$']
FIRST(external_declaration)=['int', 'float', 'double', 'char', 'function']
FIRST(type_specifier)=['int', 'float', 'double', 'char']
FIRST(declaration)=['int', 'float', 'double', 'char']
FIRST(declaration_parameter)=['identifier']
FIRST(declaration_parameter_assign)=['=', '$', '$']
FIRST(declaration_parameter_suffix)=[',', '$', '$']
FIRST(primary_expression)=['identifier', 'number', '(']
FIRST(operator)=['+', '-', '*', '/', '%', '<', '>', '^', '&', '<=', '>=']
FIRST(assignment_operator)=['=', '+', '-', '*', '/', '%', '^', '&']
FIRST(assignment_expression)=['identifier']
FIRST(assignment_expression_list_suffix)=[',', '$', '$']
FIRST(assignment_expression_list)=['identifier', '$', '$']
FIRST(expression)=['identifier', 'number', '(', 'function']
FIRST(constant_expression)=['identifier', 'number', '(']
FIRST(arithmetic_expression)=['+', '-', '*', '/', '%', '<', '>', '^', '&', '<=', '>=', 'identifier', 'number', '(', '$', '$']
FIRST(function_expression)=['function']
FIRST(expression_list_suffix)=[',', '$', '$']
FIRST(expression_list)=['identifier', 'number', '(', 'function', '$', '$']
FIRST(function_definition)=['function']
FIRST(function_parameter_list)=['int', 'float', 'double', 'char', '$', '$']
FIRST(function_parameter_list_suffix)=[',', '$', '$']
FIRST(function_parameter)=['int', 'float', 'double', 'char']
FIRST(compound_statement)=['{']
FIRST(statement_list)=['identifier', ';', 'print', 'scanf', 'continue', 'break', 'return', 'if', 'while', 'for', '{', 'int', 'float', 'double', 'char', '$', '$']
FIRST(statement)=['identifier', ';', 'print', 'scanf', 'continue', 'break', 'return', 'if', 'while', 'for', '{', 'int', 'float', 'double', 'char']
FIRST(expression_statement)=['identifier', ';', 'print', 'scanf']
FIRST(jump_statement)=['continue', 'break', 'return']
FIRST(selection_statement)=['if']
FIRST(iteration_statement)=['while', 'for']
